version: "2.2"
services:
  web:
    build: .
    ports:
      - "80:80"
      - "9000:9000"
    environment:
      WEB_DOCUMENT_ROOT: "/app/public"
    networks:
      - dujiaoka
    tty: true
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - /root/dujiaoka/userdata/redis/redis.conf:/etc/redis/redis.conf
      - /root/dujiaoka/userdata/redis/data:/data
    networks:
      - dujiaoka
    command: redis-server /etc/redis/redis.conf
  mysql:
    container_name: mysql
    image: mysql:5.7
    ports:
      - "33306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: '81877692'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
      # 这里这个指令compose启动成功后会自动创建名为docker的数据库
      MYSQL_DATABASE: 'dujiaoka'
      # 此处就是相当于 mysql create user，创建了数据库的登录用户
      MYSQL_USER: 'daobee'
      MYSQL_PASSWORD: '81877692'  
    volumes:
      - /root/dujiaoka/userdata/mysql/data:/var/lib/mysql
      # 这里的my.cnf可以从原来的安装的MySQL里面找，如果没有不配置也不影响，只是为了方便外部更改
      - /root/dujiaoka/userdata/mysql/conf/my.cnf:/etc/my.cnf
      - /root/dujiaoka/userdata/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - dujiaoka
    command: --default-authentication-plugin=mysql_native_password
networks:
  dujiaoka:
